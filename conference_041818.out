\BOOKMARK [1][-]{section.1}{Introduction}{}% 1
\BOOKMARK [2][-]{subsection.1.1}{Graph algorithms overview}{section.1}% 2
\BOOKMARK [2][-]{subsection.1.2}{Triangle counting as an application}{section.1}% 3
\BOOKMARK [2][-]{subsection.1.3}{Different approaches - set intersection/Linear algebra/map reduce/approximation methods for triangle counting}{section.1}% 4
\BOOKMARK [2][-]{subsection.1.4}{Argument for improving performance by parallelizing graph algorithms for shared memory use with GPU and OpenMP}{section.1}% 5
\BOOKMARK [2][-]{subsection.1.5}{Discrete algorithm RADIX BUCKETING for set intersection}{section.1}% 6
\BOOKMARK [1][-]{section.2}{Background and Related work}{}% 7
\BOOKMARK [2][-]{subsection.2.1}{Parallel Graph algorithms}{section.2}% 8
\BOOKMARK [2][-]{subsection.2.2}{GPU}{section.2}% 9
\BOOKMARK [2][-]{subsection.2.3}{Linear algebra}{section.2}% 10
\BOOKMARK [2][-]{subsection.2.4}{Graph}{section.2}% 11
\BOOKMARK [2][-]{subsection.2.5}{Triangle counting}{section.2}% 12
\BOOKMARK [1][-]{section.3}{Methods}{}% 13
\BOOKMARK [2][-]{subsection.3.1}{Simple Linear algebra approach as a motivation}{section.3}% 14
\BOOKMARK [2][-]{subsection.3.2}{Short summary of standard algorithms}{section.3}% 15
\BOOKMARK [2][-]{subsection.3.3}{Finding candidate closure edges E'}{section.3}% 16
\BOOKMARK [2][-]{subsection.3.4}{Set intersection using radix bucketing}{section.3}% 17
\BOOKMARK [1][-]{section*.1}{References}{}% 18
